version: '3.8'
services:
  zookeeper:
    image: zookeeper:3.7
    ports:
      - "2181:2181"
    environment:
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 2000000
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10
  api-gateway:
    build:
      context: ./packages/api-gateway
    volumes:
      - ./packages/shared:/app/shared
    ports:
      - "3000:3000"
      - "50051:50051"
    depends_on:
      - kafka
      - ai-moderator
    environment:
      - NODE_ENV=production
    restart: on-failure
  user-service:
    build:
      context: ./packages/user-service
    ports:
      - "3001:3001"
    depends_on:
      - api-gateway
      - ai-moderator
    restart: on-failure
  dashboard-service:
    build:
      context: ./packages/dashboard-service
    ports:
      - "3002:3002"
    depends_on:
      - kafka
    restart: on-failure
    
  ai-moderator:
    build:
      context: ./packages/ai-moderator
    volumes:
      - ./packages/shared:/app/shared
    ports:
      - "3003:3003"
    depends_on:
      - kafka
    restart: on-failure